
3layer 분리
controller => router
  요청 받고 처리 로직 호출, 전달
services => logics
  db 작용들 설정, return 값 설정
  req, res 활용을 하지 않음
dataAccess Layer => models
  DB model



============
purchases, items pagination 하면 좋을듯??

file server / chat server 구현
file 요청은 클라이언트에서 요청하는거니까 어디든 당연히 cors 들어가는거고.
cors 설정, 클라이언트와 서버는 무조건 분리되어 있음.

File server
item 작성 시 img 데이터 업로드,
업로드 경로를 어떻게 지정을 하는게 좋을가??
클라이언트에서 file server 위치를 정확하게 모르잖어... 이거를 웹소켓으로 써서 보내야 하나?
간단하게 s3, firestorage 이거 쓰면 괜찮긴한데,
나는 서버를 직접 구현해봤으면 함

file 서버를 확장하기에는 다소 어려움. 가득 찰 경우 두번째 세번째 file 서버는 이름을 따로 지정을 한 상태로 사용을 하던가, db file 경로를 일괄적으로 업데이트 하던가...
그리고 한번 전송중이면 다른것을 전송시키질 못하니까 전송할때는 pipe 로 전송을 하던가 buffer 적극적으로 활용해야 함
1. 서버의 주소는 명시적이고 고정적이어야 한다.
2. 서버 주소는 클라이언트에 노출되어야 파일에 대한 접근이 가능. 따라서 client 소스에 하드코딩이 필요

3. 업로드와 다운로드는 직접적으로 이뤄지며 mq 등 뒤에서 이루어지는 행위들이 필요하지 않다.
4. 정확한 파일들은 db에서 관리된다. 하지만 권한이 없는 상태로 접근할 경우 통제하는 방법은 어떻게??
정확한 파일의 위치를 모르니 임의적으로 접근핤 수 없다? 이미 접근한 상태에서 주소만 공유하면 바로 접근이 가능하기때문에 좀...그럼

다중 파일 업로드 구현
  1. 업로드 파일 이름 강제화 : userEmail + new Date(),
  file 1 : useEmail_0014
  file 2 : useEmail_0015
  file 3 : useEmail_0016
  userEmail 에 _ 가 있을 경우는??
  뒤에서부터 처리하면됨
  item.img : 0014|0015|0016
  이게 저장하기에는 새로 테이블을 안만들어도 되고 편함
  삭제 및 업데이트는 img column 받아와서 해당 부분만 바꿔서 처리하면 되지 않을까

  2. img 테이블을 하나 생성한 다음 개별 이미지에 대한 db 값을 저장하는거,
  두번의 쿼리 수행, 그리고 메인에 보일 이미지도 두번의 dbhit 발생하니까 최소화 하기위해서 thumbnailimg 컬럼을 따로 추가 필요

upload 방식
  1. 그냥 업로드하면서 이미지 파일 이름등을 수정함.

  2. 이미지 먼저 upload 하기 위해서 지정된 게시글 id 필요
  mq 로 temp data를 pay.item 에 insert, itemUID 반환
  반환된 itemUID 값을 기반으로 file db에 저장
  