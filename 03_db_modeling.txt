========================================
MYSQL
========================================
auth-service : auth_msa

  Users {
    userUID       (string: UUID)  : PK, NN,
    email         (string: email) : UQ, NN,
    phonenum      (string)        : UQ,
    displayname   (string)        : NN,
    password      (string)        : NN,
    point         (int),
    role          (int)           : (IN 0: 활성화, 1: 비활성화, 2: 탈퇴, 3: 관리자 )
    deletedAt     (string),
  }

  Points {
    idx           (int)      : PK, NN, AI,
    type          (string)   : NN, defaultValue : 'etc', (IN 'debit', 'point', 'phone', 'etc')
    remark        (string),                             // 비고
    pay           (int)      : NN, defaultValue : 0,    // 사용된 포인트
    load          (int)      : NN, defaultValue: 0,     // 충전된 포인트
    purchaseUID   (int)      : (FK - associated with pay_msa.Purchases)
    createdAt     (string),  
    UserUserUID   (string)   : NN, FK(Users.userUID)
  }


CREATE TABLE IF NOT EXISTS `Users` (
  `userUID` CHAR(36) BINARY NOT NULL , 
  '`email` VARCHAR(255) NOT NULL, 
  `phonenum` VARCHAR(255), 
  `displayname` VARCHAR(255) NOT NULL, 
  `password` VARCHAR(255) NOT NULL, 
  `point` INTEGER NOT NULL DEFAULT 0, 
  `role` INTEGER NOT NULL DEFAULT 0, 
  `deletedAt` DATETIME, UNIQUE `Users_email_unique` (`email`), UNIQUE `Users_phonenum_unique` (`phonenum`), PRIMARY KEY (`userUID`)
) ENGINE=InnoDB;

SHOW INDEX FROM `Users` FROM `auth_msa`

CREATE TABLE IF NOT EXISTS `Points` (
  `idx` INTEGER NOT NULL auto_increment , 
  `type` VARCHAR(255) NOT NULL DEFAULT 'etc', 
  `remark` VARCHAR(255), 
  `pay` INTEGER NOT NULL DEFAULT 0, 
  `load` INTEGER NOT NULL DEFAULT 0, 
  `purchaseUID` INTEGER, 
  `createdAt` DATETIME NOT NULL, 
  `UserUserUID` CHAR(36) BINARY, PRIMARY KEY (`idx`), FOREIGN KEY (`UserUserUID`) REFERENCES `Users` (`userUID`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;


========================================
pay-service : pay_msa

  Items : {
    itemUID     (int)     : PK, NN, AI,
    title       (string)  : NN,
    price       (int)     : NN,
    discription (string),
    count       (int)     : NN,
    img         (boolean) : (associated with file_msa.Files),
    mannager    (string)  : NN (FK - associated with auth_msa.Users),
    updatedAt   (string)  : NN,
    deletedAt   (string),
  },
  Purchases : {
    idx         (int)     : PK, NN, AI,
    count       (int)     : NN,
    price       (int)     : NN,
    discount    (int),  
    type        (string)  : (IN 'debit', 'point', 'phone', 'etc'),
    userUID     (string)  : (FK - associated with auth_msa.Users),
    remark      (string), 
    createdAt   (string)  : NN,
    deletedAt   (string),
  },


CREATE TABLE IF NOT EXISTS `Items` (
  `itemUID` INTEGER NOT NULL auto_increment , 
  `title` VARCHAR(255) NOT NULL, `price` INTEGER NOT NULL, 
  `discription` VARCHAR(255), 
  `count` INTEGER NOT NULL DEFAULT 0, 
  `img` TINYINT(1) DEFAULT false, 
  `manager` VARCHAR(255) NOT NULL, 
  `updatedAt` DATETIME NOT NULL, 
  `deletedAt` DATETIME, PRIMARY KEY (`itemUID`)
) ENGINE=InnoDB;

SHOW INDEX FROM `Items` FROM `pay_msa`

CREATE TABLE IF NOT EXISTS `Purchases` (
  `idx` INTEGER NOT NULL auto_increment , 
  `count` INTEGER NOT NULL, 
  `price` INTEGER NOT NULL, 
  `discount` INTEGER, 
  `type` VARCHAR(255) NOT NULL DEFAULT 'etc', 
  `userUID` VARCHAR(255) NOT NULL, 
  `remark` VARCHAR(255), 
  `createdAt` DATETIME NOT NULL, 
  `ItemItemUID` INTEGER, PRIMARY KEY (`idx`), FOREIGN KEY (`ItemItemUID`) REFERENCES `Items` (`itemUID`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;


========================================
file-service : file_msa
  
  Files : {
    imageUID    (int)     : PK, NN, AI
    name        (string)  : UQ, NN,
    itemUID     (string)  : NN,
    deletedAt   (string),
  }


CREATE TABLE IF NOT EXISTS `Files` (
  `imageUID` INTEGER NOT NULL auto_increment ,
  `name` VARCHAR(255) NOT NULL, 
  `itemUID` INTEGER NOT NULL DEFAULT 0,
  `deletedAt` DATETIME, UNIQUE`Files_name_unique` (`name`), PRIMARY KEY (`imageUID`)
) ENGINE=InnoDB;

SHOW INDEX FROM `Files` FROM `file_msa`



========================================
REDIS
========================================
  Key : "sess" + user's passport sessionID
  Value : { ...sessionData, userUID, email, displayname, role }