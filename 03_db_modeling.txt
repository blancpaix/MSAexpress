DB 테이블 설계

ORM 사용을 자제하고 raw query 를 직접 작성해보고 싶었는데 Model 구현하기가 애매해서 ORM 써야겠다.
씁쓸하구먼

================================
auth-service : auth_msa

  USER {
    userUID : int (pk)
    email : char(12)
    phoneNumber : char(11)
    name : char(6),
    displayName: char(24),
    password : char(128),
    point : int,
    state : int(2) { 0: 활성화, 1: 비활성화, 2: 탈퇴 }
  }
  POINT {
    idx : int,
    createdAt : date,
    method : string (16),
    note : string (32),
    amount : int,
    userUID : int (fk),
  }

CREATE DATABASE IF NOT EXISTS aut_msa

CREATE TABLE IF NOT EXISTS `Users` (`userUID` CHAR(36) BINARY NOT NULL , `email` VARCHAR(255) NOT NULL UNIQUE, `phoneNumber` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `passwrod` VARCHAR(255) NOT NULL, `point` INTEGER NOT NULL DEFAULT 0, `state` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (`userUID`)) ENGINE=InnoDB;
SHOW INDEX FROM `Users` FROM `auth_msa`
CREATE TABLE IF NOT EXISTS `Points` (`idx` INTEGER NOT NULL auto_increment , `method` VARCHAR(255) NOT NULL DEFAULT 'etc', `note` VARCHAR(255), `amount` INTEGER NOT NULL, `UserUserUID` CHAR(36) BINARY, PRIMARY KEY (`idx`), FOREIGN KEY (`UserUserUID`) REFERENCES `Users` (`userUID`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
SHOW INDEX FROM `Points` FROM `auth_msa`


================================
pay-serive : pay_msa

  db2: pay-msa
    ITEMS : {
      itemUID, price, discount, count, discription, img, manager
    },
    Purchases : {
      userUID, count, price, discount, timestamp, method, memo, itemUID(items)
    },

CREATE DATABASE IF NOT EXISTS aut_msa

CREATE TABLE IF NOT EXISTS `Items` (`itemUID` INTEGER NOT NULL auto_increment , `price` INTEGER NOT NULL, `discription` VARCHAR(255), `count` INTEGER NOT NULL DEFAULT 0, `img` VARCHAR(255), `manager` VARCHAR(255) NOT NULL, PRIMARY KEY (`itemUID`)) ENGINE=InnoDB;
SHOW INDEX FROM `Items` FROM `pay_msa`
CREATE TABLE IF NOT EXISTS `Purchases` (`idx` INTEGER NOT NULL , `count` INTEGER NOT NULL, `price` INTEGER NOT NULL, `discount` INTEGER, `method` VARCHAR(255) NOT NULL, `userUID` VARCHAR(255) NOT NULL, `memo` VARCHAR(255), `ItemItemUID` INTEGER, PRIMARY KEY (`idx`), FOREIGN KEY (`ItemItemUID`) REFERENCES `Items` (`itemUID`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
SHOW INDEX FROM `Purchases` FROM `pay_msa`


========================================
etc-service : etc_msa
  db3: etc-msa
    BOARD : {
      timestamp, userUID, displayName, password, title, content
    },
    COMMENT: {
      timestamp, userUID, displayName, password, comment
    }



sequelize

모델 이름 단수로 작성하면 복수로 테이블 만들어줌 강제로 동일화 하려먼 opts에 freezeTableName
모델에 기본적으로 createdAt, updatedAt 필드가 들어감, dataType : DataTypes.DATE 
opts : { timestamps: false, createAt : false } 로 제거

DataTypes.STRING             // VARCHAR(255)
DataTypes.STRING(1234)       // VARCHAR(1234)
DataTypes.TEXT               // TEXT
DataTypes.TEXT('tiny')       // TINYTEXT
DataTypes.BOOLEAN            // TINYINT(1)
DataTypes.INTEGER            // INTEGER.ZEROFILL / UNSIGNED / UNSIGNED.ZEROFILL
DataTypes.BIGINT             // BIGINT
DataTypes.FLOAT              // FLOAT
DataTypes.DATE       // DATETIME for mysql / sqlite, TIMESTAMP WITH TIME ZONE for postgres
DataTypes.DATE(6)    // DATETIME(6) for mysql 5.6.4+. Fractional seconds support with up to 6 digits of precision
DataTypes.DATEONLY   // DATE without time
{  type: DataTypes.UUID, defaultValue: DataTypes.UUIDV4 // Or DataTypes.UUIDV1 }


const User = sequelize.define(modelName, attr, opts)
================
const User extends {
  id (idx 이거는 자동으로 삭제되는가보다?) pk 라서?
};

const userModel = User.init({
  attr
}, {
  // other model opts
  sequelize, // pass the connection instance
  modelName : 'Sample'
});
이 방법으로는 한번에 통합하기 힘들듯


sequelize.sync() 하면 table 생성 됨