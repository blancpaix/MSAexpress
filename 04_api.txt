[Auth service]
POST /auth/signin  (session required)
  req.body = {email, password}
  result : true / Error

POST /auth/signout (session required)
  result : redirect to main page

POST /auth/dropout (session required)
  req.body = {phonenum, password}
  result : redirect to main page / Error

POST /auth/signup
  req.body = { email, password, displayname, phonenum }
  result : true / Error

POST /auth/findid
  req.body = { phonenum }
  result : user's email / Error

POST /auth/findpw
  req.body = { email, phonenum }
  result : true (send pw to user's email) / Error

POST /auth/updatepw  (session required)
  req.body = { password }
  result : true / Error

POST /auth/loadPoint (session required) 
  req.body = { type, remark, load }
  result : user's current point / Error


[Pay service]
GET /pay/items
  req.params = { offset, currentPage }
  result : item lists / empty array

POST /pay/item  (session required) 
  req.body = { title, price, discription, count, img }
  result : item's UID / Error

GET /pay/item/:itemId (session required) 
  req.param = { itemId }
  result : item / Error

PATCH /pay/item/:itemId (session required) 
  req.param = { itemId }
  result : item / Error

DELETE /pay/item/:itemId (session required) 
  req.param = { itemId }
  result : true / Error

POST /pay/checkout/:itemUID (session required) 
  req.param = { itemUID }
  req.body = {count, price, discount, type, remark}
  result : user's current point / Error

GET /pay/purchases  (session required) 
  req.params = { offset, currentPage }
  result : purchase list / Error

GET /pay/purchases/:purchaseUID  (session required) 
  req.params = { purchaseUID }
  result : purchase / Error


[File service]
GET /file/img
  result : image file / Error

GET /file/static
  result : static file / Error

GET /file/manage/img/:itemUID  (session required) 
  req.params = { itemUID }
  result : images data / Error

DELETE /file/manage/img/:filename  (session required) 
  req.params = { filename }
  result : true / Error

POST /file/manage/img  (session required) 
  req.file = { upload file }
  result : uploaded image data / Error

POST /file/manage/imgs  (session required) 
  req.files = { upload files }
  result : uploaded images data / Error


DELETE /file/manage/admin/garbage  (admin role required)
  result : true / Error

DELETE /file/manage/admin/:filename  (admin role required) 
  req.params = { filename }
  result : true / Error

DELETE /file/manage/admin  (admin role required) 
  req.body = { filenames }
  result : true / Error


TODO 
POST /pay/item
PATCH /pay/item
  File service 와 상호연동 필요